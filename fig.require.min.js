caterwaul.tconfiguration('std seq continuation','fig.require.nodejs',(function (require){return function (){this.method('figment_require',fn[files,cc][cc(seq[~files.split(/\s+/)*[require('fs').readFileSync(_,'utf8')]].slice())])}})(typeof require==='undefined'||require)).tconfiguration('std seq continuation','fig.require.ajax',function (){this.method('figment_require',fn[files,cc][l*[file_list=seq[~files.split(/\s+/)],contents={},requests_left=file_list.size(),got_everything()=cc(seq[file_list*[contents[_]]]),receive(filename)(data)=--requests_left/se[contents[filename]=data,_||got_everything()]] in seq[file_list*![get(_,receive(_))]]]),where*[create_xhr()=window.XMLHttpRequest/re[_?new _():new window.ActiveXObject('Microsoft.XMLHTTP')],get(url,success)=create_xhr()/se[_.open('GET',url,true),_.send(),_.onreadystatechange()=_.readyState===4&&success(_.responseText)]]}).tconfiguration('std seq continuation','fig.require',function (){this.configure(typeof window==='undefined'?'fig.require.nodejs':'fig.require.ajax').method('require',fn[modules,cc][this.figment_require(modules,_)/cpb.ms[cc&&cc.call(this/se.c[seq[~ms*![c(_)]]])]])});